Install tomcat and run as a service 
1.we need to install java if it is not there
2.we need to install tomcat if it is not there
3.we need to create a user called tomcat
4.we need to change ownership of tomcat directory to tomcat user
5.we need to create service file under /etc/systemd/system/tomcat10.service
6.reload the system using system daemon reload
7.start the tomcat service

how to check java is installed already or not?
yum list java-1.8.0-openjdk-devel -y ---> will check package is available or not
java -version ---> java version if it shows version java is installed , if it shows command not found java is not installed 

Inorder to store/declare values in variable we can use register module.
Ansible register is a way to capture the output from task execution and store it in a variable.
To print variable values we can use debug module
selectattr --- retreive attribute values from list and check the exact match from the generated output 
when ---- used for condition checking 

1.Playbook to check java is installed or not if not download based on output

---
- hosts: localhost
  tasks:
    - name: check java is installed or not
      yum:
        list: java-1.8.0-openjdk-devel
      register: java_output
    - name: print java_output
      debug:
        msg: "  {{ java_output }} "
    - name : install java
      yum:
        name : java-1.8.0-openjdk-devel
        state: latest
      when: java_output.results | selectattr("yumstate", "match", "installed") | list | length==0

Output :

 {u'envra': u'1:java-1.8.0-openjdk-devel-1.8.0.312.b07-1.amzn2.0.1.x86_64', u'name': u'java-1.8.0-openjdk-devel', u'repo': u'amzn2-core', 
 u'epoch': u'1', u'version': u'1.8.0.312.b07', u'release': u'1.amzn2.0.1', u'yumstate': u'available', u'arch': u'x86_64'}
 
 After condition based on selectattr 
 
  {u'envra': u'1:java-1.8.0-openjdk-devel-1.8.0.312.b07-1.amzn2.0.2.x86_64', u'name': u'java-1.8.0-openjdk-devel', u'repo': u'installed', 
  u'epoch': u'1', u'version': u'1.8.0.312.b07', u'release': u'1.amzn2.0.2', u'yumstate': u'installed', u'arch': u'x86_64'}]}

Playbook to check tomcat folder already exists or not


---
- hosts: localhost
  tasks:
    - name : check tomcat folder already exists or not
      stat:
        path: /opt/apache-tomcat-10.0.7
      register: tomcat_output
    - name: print tomcat output
      debug:
        msg: " {{ tomcat_output }} "

Output :

ok: [localhost] => {
    "msg": " {'failed': False, u'stat': {u'exists': False}, u'changed': False} " ----> stat exists false means tomcat is not present in /opt directory
    
}

2.Ansible Playbook to download if it is not installed based on output and extract tar file

---
- hosts: localhost
  vars:
    tomcat_download_url: https://downloads.apache.org/tomcat/tomcat-10/v10.0.16/bin/apache-tomcat-10.0.16.tar.gz
  tasks:
   - name : check tomcat folder already exists or not
      stat:
        path: /opt/apache-tomcat-10.0.16
      register: tomcat_output
    - name: print tomcat output
      debug:
        msg: " {{ tomcat_output  }}  "
    - name: download tomcat if it is not downloaded
      get_url:
        url: " {{ tomcat_download_url }} "
        dest: /opt
        mode: 0755
      when: not tomcat_output.stat.exists
    - name: extract tomcat folder
      unarchive:
        src: /opt/apache-tomcat-10.0.16.tar.gz
        dest: /opt
        remote_src: True
    - name: print tomcat output
      debug:
        msg: " {{ tomcat_output  }}  "

3.Create tomcat user and change ownership to tomcat10
  
  - name: create tomcat user
      user:
        name: tomcat10
        shell: /bin/bash
    - name: change tomcat directory ownership to tomcat10 user
      file:
        path: /opt/apache-tomcat-10.0.16
        owner: tomcat10
        group: tomcat10
        state: directory
        recurse: yes

4.Create tomcat service and change ownership to tomcat10

- name: create tomcat service file
      file:
        path: /etc/systemd/system/tomcat10.service
        state: touch
    - name: change service file ownership to tomcat10
      file:
        path : /etc/systemd/system/tomcat10.service
        owner: tomcat10
        group: tomcat10

5,6.Create service file content in jinja2 template passed the content to tomcat10 service file dynamically and reload the system service 

- name: use template to create service file content dynamically
      template:
        src: /root/ansibleplaybooks/tomcat10.service.j2
        dest: /etc/systemd/system/tomcat10.service
    - name: just force systemd to reread configs (2.4 and above)
      systemd:
        daemon_reload: yes
7.Start the tomcat service 

- name: enable tomcat startup
      service:
        name: tomcat10
        state: restarted

Ansible Playbook to start the tomcat service 

---
- hosts: localhost
  vars:
    tomcat_download_directory: /opt
    tomcat_download_url: https://downloads.apache.org/tomcat/tomcat-10/v10.0.16/bin/apache-tomcat-10.0.16.tar.gz
  tasks:
    - name: check java is installed or not
      yum:
        list: java-1.8.0-openjdk-devel
      register: java_output
    - name: print java_output
      debug:
        msg: "  {{ java_output }} "
    - name : install java
      yum:
        name : java-1.8.0-openjdk-devel
        state: latest
      when: java_output.results | selectattr("yumstate", "match", "installed") | list | length==0
    - name : check tomcat folder already exists or not
      stat:
        path: /opt/apache-tomcat-10.0.16
      register: tomcat_output
    - name: print tomcat output
      debug:
        msg: " {{ tomcat_output  }}  "
    - name: download tomcat if it is not downloaded
      get_url:
        url: " {{ tomcat_download_url }} "
        dest: /opt
        mode: 0755
      when: not tomcat_output.stat.exists
    - name: extract tomcat folder
      unarchive:
        src: /opt/apache-tomcat-10.0.16.tar.gz
        dest: /opt
        remote_src: True
    - name: create tomcat user
      user:
        name: tomcat10
        shell: /bin/bash
    - name: change tomcat directory ownership to tomcat10 user
      file:
        path: /opt/apache-tomcat-10.0.16
        owner: tomcat10
        group: tomcat10
        state: directory
        recurse: yes
    - name: create tomcat service file
      file:
        path: /etc/systemd/system/tomcat10.service
        state: touch
    - name: change service file ownership to tomcat10
      file:
        path : /etc/systemd/system/tomcat10.service
        owner: tomcat10
        group: tomcat10
    - name: use template to create service file content dynamically
      template:
        src: /root/ansibleplaybooks/tomcat10.service.j2
        dest: /etc/systemd/system/tomcat10.service
    - name: just force systemd to reread configs (2.4 and above)
      systemd:
        daemon_reload: yes
    - name: enable tomcat startup
      service:
        name: tomcat10
        state: restarted
     
